#ifndef OLED1306_FONT_H_
#define OLED1306_FONT_H_

#define OLED1306_TABLE_DIG_NEGATIVE_SIGN_INDEX 10
#define OLED1306_TABLE_DIG_OVERFLOW_SIGN_INDEX 11
#define OLED1306_TABLE_DIG_BLANK_SIGN_INDEX 12

#ifdef OLED1306_FONT_SYMBOLS_16x16
static const uint8_t batt_full[32] = {0, 0, 252, 4, 244, 244, 4, 244, 244, 4, 244, 196, 220,
		16, 240, 0, 0, 0, 31, 16, 23, 23, 16, 23, 23, 16, 23, 17, 29, 4, 7, 0};
static const uint8_t batt2[32] = {0, 0, 252, 4, 244, 244, 4, 244, 244, 4, 4, 4, 28, 16, 240,
		0, 0, 0, 31, 16, 23, 23, 16, 23, 23, 16, 16, 16, 28, 4, 7, 0};
static const uint8_t batt1[32] = {0, 0, 252, 4, 244, 244, 4, 4, 4, 4, 4, 4, 28, 16, 240, 0,
		0, 0, 31, 16, 23, 23, 16, 16, 16, 16, 16, 16, 28, 4, 7, 0};
static const uint8_t batt0[32] = {0, 0, 252, 4, 4, 4, 4, 4, 4, 4, 4, 4, 28, 16, 240, 0, 0, 0,
		31, 16, 16, 16, 16, 16, 16, 16, 16, 16, 28, 4, 7, 0};
static const uint8_t plug[32] = {0, 0, 128, 128, 128, 224, 240, 240, 248, 248, 248, 248, 32,
		32, 32, 0, 0, 0, 1, 1, 1, 7, 15, 15, 31, 31, 31, 31, 4, 4, 4, 0};
static const uint8_t empty[32] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};


static const uint8_t mark_a[32] = {0, 224, 16, 8, 4, 226, 18, 10, 10, 18, 226, 4, 8, 16, 224,
		0, 0, 7, 8, 16, 32, 79, 65, 65, 65, 65, 79, 32, 16, 8, 7, 0};
static const uint8_t mark_b[32] = {0, 224, 16, 8, 4, 2, 250, 138, 138, 138, 82, 36, 8, 16, 224,
		0, 0, 7, 8, 16, 32, 64, 79, 72, 72, 72, 69, 34, 16, 8, 7, 0};

static const uint8_t prg[32] = {0, 254, 254, 6, 246, 22, 22, 22, 22, 22, 22, 246, 6, 254, 254,
		0, 0, 127, 127, 96, 111, 96, 96, 96, 96, 96, 96, 111, 96, 127, 127, 0};
static const uint8_t pwr[32] = {0, 254, 254, 6, 246, 22, 38, 198, 198, 38, 22, 246, 6, 254, 254,
		0, 0, 127, 127, 96, 111, 96, 96, 96, 96, 96, 96, 111, 96, 127, 127, 0};
static const uint8_t spd[32] = {0, 254, 254, 6, 6, 198, 38, 22, 22, 38, 70, 6, 6, 254, 254, 0, 0,
		127, 127, 96, 96, 99, 100, 104, 104, 100, 98, 96, 96, 127, 127, 0};
#endif


//#ifdef OLED1306_FONT_DIGITS_8x16
static const uint8_t digits_8x16[13][16] = {
		{0, 252, 254, 198, 102, 254, 252, 0, 0, 15, 31, 56, 56, 31, 15, 0},
		{0, 8, 12, 254, 254, 0, 0, 0, 0, 32, 32, 63, 63, 32, 32, 0},
		{0, 12, 6, 130, 194, 246, 60, 0, 0, 60, 62, 35, 33, 32, 32, 0},
		{0, 12, 14, 198, 198, 254, 252, 0, 0, 12, 28, 56, 56, 31, 15, 0},
		{0, 254, 254, 128, 128, 254, 254, 0, 0, 0, 1, 1, 1, 63, 63, 0},
		{0, 62, 126, 102, 198, 198, 134, 0, 0, 12, 24, 48, 48, 29, 15, 0},
		{0, 252, 254, 198, 198, 198, 132, 0, 0, 15, 31, 48, 48, 31, 15, 0},
		{0, 6, 6, 198, 230, 126, 30, 0, 0, 0, 62, 63, 1, 0, 0, 0},
		{0, 252, 254, 198, 198, 254, 252, 0, 0, 15, 31, 56, 56, 31, 15, 0},
		{0, 124, 254, 198, 198, 254, 252, 0, 0, 12, 28, 56, 56, 31, 15, 0},
		{0, 128, 128, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // Neg sign
		{0, 8, 16, 32, 64, 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0}, // > Overflow sign
		{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0} //blank
		
};
//#endif

//#ifdef OLED1306_FONT_ASCII_8x16
static const uint8_t ascii_8x16[95][16] = {
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, //space
	{0, 0, 0, 252, 252, 0, 0, 0, 0, 0, 0, 55, 55, 0, 0, 0}, // !	
	{0, 0, 30, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // "
	{0, 32, 248, 32, 32, 248, 32, 0, 0, 4, 31, 4, 4, 31, 4, 0}, // #	
	{0, 24, 100, 134, 4, 24, 0, 0, 0, 12, 16, 48, 19, 12, 0, 0}, //$
	{0, 8, 20, 136, 96, 16, 12, 0, 0, 12, 2, 1, 4, 10, 4, 0}, // %
	{0, 28, 162, 66, 162, 18, 12, 0, 0, 31, 32, 32, 20, 13, 4, 0}, //&
	{0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // '
	{0, 224, 24, 4, 2, 0, 0, 0, 0, 3, 12, 16, 32, 0, 0, 0}, // (
	{0, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 32, 16, 12, 3, 0}, // )
	{0, 160, 64, 176, 64, 160, 0, 0, 0, 2, 1, 6, 1, 2, 0, 0}, // *
	{0, 128, 128, 224, 128, 128, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0}, //+
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 56, 0, 0, 0}, // ,
	{0, 128, 128, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // -
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0}, // .
	{0, 0, 0, 128, 64, 48, 12, 0, 0, 24, 6, 1, 0, 0, 0, 0}, // /
	{0, 252, 254, 198, 102, 254, 252, 0, 0, 15, 31, 56, 56, 31, 15, 0}, //0
	{0, 8, 12, 254, 254, 0, 0, 0, 0, 32, 32, 63, 63, 32, 32, 0}, // 1
	{0, 12, 6, 130, 194, 246, 60, 0, 0, 60, 62, 35, 33, 32, 32, 0}, // 2
	{0, 12, 14, 198, 198, 254, 252, 0, 0, 12, 28, 56, 56, 31, 15, 0}, //3
	{0, 254, 254, 128, 128, 254, 254, 0, 0, 0, 1, 1, 1, 63, 63, 0}, // 4
	{0, 62, 126, 102, 198, 198, 134, 0, 0, 12, 24, 48, 48, 29, 15, 0}, //5
	{0, 252, 254, 198, 198, 198, 132, 0, 0, 15, 31, 48, 48, 31, 15, 0}, //6
	{0, 6, 6, 198, 230, 126, 30, 0, 0, 0, 62, 63, 1, 0, 0, 0}, // 7
	{0, 252, 254, 198, 198, 254, 252, 0, 0, 15, 31, 56, 56, 31, 15, 0}, //8
	{0, 124, 254, 198, 198, 254, 252, 0, 0, 12, 28, 56, 56, 31, 15, 0}, //9
	{0, 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0}, // :
	{0, 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 88, 56, 0, 0, 0}, // ;
	{0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0}, // <
	{0, 32, 32, 32, 32, 32, 32, 0, 0, 2, 2, 2, 2, 2, 2, 0}, // =
	{0, 8, 16, 32, 64, 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0}, // >
	{0, 28, 6, 2, 130, 198, 124, 0, 0, 0, 0, 27, 27, 0, 0, 0}, // ?
	{224, 16, 200, 40, 200, 16, 224, 0, 3, 4, 9, 10, 9, 10, 1, 0}, // @
	{0, 248, 4, 2, 2, 4, 248, 0, 0, 63, 1, 1, 1, 1, 63, 0}, // A
	{0, 254, 130, 130, 130, 70, 56, 0, 0, 63, 32, 32, 32, 49, 14, 0}, //B
	{0, 248, 4, 2, 2, 4, 24, 0, 0, 15, 16, 32, 32, 16, 12, 0}, //C
	{0, 254, 2, 2, 2, 4, 248, 0, 0, 63, 32, 32, 32, 16, 15, 0}, //D
	{0, 254, 130, 130, 130, 130, 2, 0, 0, 63, 32, 32, 32, 32, 32, 0}, //E
	{0, 254, 130, 130, 130, 130, 2, 0, 0, 63, 0, 0, 0, 0, 0, 0}, //F
	{0, 248, 4, 2, 2, 4, 24, 0, 0, 15, 16, 34, 34, 18, 14, 0}, //G
	{0, 254, 128, 128, 128, 128, 254, 0, 0, 63, 0, 0, 0, 0, 63, 0}, //H
	{0, 2, 2, 254, 2, 2, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0}, // I
	{0, 0, 0, 0, 0, 0, 254, 0, 0, 14, 16, 32, 32, 16, 15, 0}, //J
	{0, 254, 128, 64, 32, 16, 14, 0, 0, 63, 0, 1, 2, 4, 56, 0}, //K	
	{0, 254, 0, 0, 0, 0, 0, 0, 0, 63, 32, 32, 32, 32, 48, 0}, //L
	{0, 254, 8, 48, 48, 8, 254, 0, 0, 63, 0, 0, 0, 0, 63, 0}, //M
	{0, 254, 16, 224, 0, 0, 254, 0, 0, 63, 0, 0, 3, 4, 63, 0}, //N
	{0, 248, 4, 2, 2, 4, 248, 0, 0, 15, 16, 32, 32, 16, 15, 0}, //O
	{0, 254, 130, 130, 130, 68, 56, 0, 0, 63, 0, 0, 0, 0, 0, 0}, //P
	{0, 248, 4, 2, 2, 4, 248, 0, 0, 15, 16, 32, 40, 16, 47, 0}, // Q
	{0, 254, 130, 130, 130, 68, 56, 0, 0, 63, 0, 1, 2, 4, 56, 0}, //R
	{0, 56, 68, 130, 2, 4, 24, 0, 0, 12, 16, 32, 33, 18, 12, 0}, //S
	{0, 2, 2, 254, 2, 2, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0}, //T
	{0, 254, 0, 0, 0, 0, 254, 0, 0, 15, 16, 32, 32, 16, 15, 0}, //U
	{0, 252, 0, 0, 128, 96, 28, 0, 0, 63, 8, 6, 1, 0, 0, 0}, //V
	{0, 254, 0, 0, 0, 0, 254, 0, 0, 63, 8, 6, 6, 8, 63, 0}, //W
	{0, 14, 48, 192, 192, 48, 14, 0, 0, 56, 6, 1, 1, 6, 56, 0}, //X
	{0, 62, 64, 128, 128, 64, 254, 0, 0, 16, 32, 64, 64, 32, 31, 0}, //Y
	{0, 14, 2, 2, 130, 98, 30, 0, 0, 56, 38, 33, 32, 32, 56, 0}, //Z
	{0, 0, 254, 2, 2, 0, 0, 0, 0, 0, 63, 32, 32, 0, 0, 0}, // [
	{0, 12, 48, 64, 128, 0, 0, 0, 0, 0, 0, 0, 1, 6, 24, 0}, // backslash
	{0, 0, 0, 2, 2, 254, 0, 0, 0, 0, 0, 32, 32, 63, 0, 0}, // ]
	{0, 16, 8, 4, 8, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // ^
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 0}, // _
	{0, 0, 4, 8, 16, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // `
	{0, 128, 64, 32, 32, 64, 128, 0, 0, 63, 4, 4, 4, 4, 63, 0}, // a
	{0, 224, 0, 0, 0, 0, 0, 0, 0, 63, 33, 33, 33, 18, 12, 0}, //b
	{0, 128, 64, 32, 32, 64, 128, 0, 0, 31, 32, 64, 64, 32, 25, 0}, //c
	{0, 0, 0, 0, 0, 0, 224, 0, 0, 12, 18, 33, 33, 33, 63, 0}, //d
	{0, 128, 64, 32, 32, 64, 128, 0, 0, 31, 34, 66, 66, 34, 19, 0}, //e
	{0, 0, 192, 32, 32, 32, 192, 0, 0, 2, 63, 2, 0, 0, 0, 0}, //f
	{0, 128, 64, 32, 32, 64, 128, 0, 0, 19, 36, 68, 68, 36, 31, 0}, //g
	{0, 224, 0, 0, 0, 0, 0, 0, 0, 63, 2, 1, 1, 2, 60, 0}, //h
	{0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 33, 63, 33, 0, 0, 0}, //i
	{0, 0, 0, 0, 0, 0, 96, 0, 0, 24, 32, 32, 32, 32, 31, 0}, //j
	{0, 224, 0, 0, 0, 128, 0, 0, 0, 63, 4, 10, 17, 32, 0, 0}, //k
	{0, 0, 224, 32, 0, 0, 0, 0, 0, 32, 63, 32, 32, 0, 0, 0}, //l
	{0, 224, 64, 128, 128, 64, 224, 0, 0, 63, 0, 0, 0, 0, 63, 0}, //m
	{0, 224, 64, 32, 32, 32, 192, 0, 0, 63, 0, 0, 0, 0, 63, 0}, //n
	{0, 128, 64, 32, 32, 64, 128, 0, 0, 15, 16, 32, 32, 16, 15, 0}, //o
	{0, 224, 32, 32, 32, 64, 128, 0, 0, 63, 4, 4, 4, 2, 1, 0}, //p
	{0, 128, 64, 32, 32, 32, 224, 0, 0, 1, 2, 4, 4, 4, 63, 0}, //q
	{0, 224, 64, 32, 32, 64, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0}, //r
	{0, 128, 64, 32, 32, 64, 128, 0, 0, 8, 17, 34, 34, 20, 8, 0}, //s
	{0, 128, 224, 128, 0, 0, 0, 0, 0, 0, 31, 32, 32, 32, 16, 0}, //t
	{0, 224, 0, 0, 0, 0, 224, 0, 0, 15, 16, 32, 32, 16, 63, 0}, //u
	{0, 224, 0, 0, 0, 0, 224, 0, 0, 63, 16, 8, 4, 2, 1, 0}, //v
	{0, 224, 0, 0, 0, 0, 224, 0, 0, 63, 16, 8, 8, 16, 63, 0}, //w
	{0, 96, 128, 0, 0, 128, 96, 0, 0, 48, 13, 2, 2, 13, 48, 0}, //x
	{0, 224, 0, 0, 0, 0, 224, 0, 0, 8, 17, 34, 34, 17, 15, 0}, //y
	{0, 96, 32, 32, 32, 160, 96, 0, 0, 48, 40, 36, 35, 32, 48, 0}, //z
	{0, 128, 128, 64, 60, 2, 0, 0, 0, 0, 0, 1, 30, 32, 0, 0}, //{
	{0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0}, // |
	{0, 0, 2, 60, 64, 128, 128, 0, 0, 0, 32, 30, 1, 0, 0, 0}, // }
	{0, 0, 0, 128, 0, 0, 0, 0, 0, 2, 1, 0, 1, 2, 1, 0} // ~
};
//#endif

#endif /* OLED1306_FONT_H_ */

